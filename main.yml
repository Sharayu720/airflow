name: Build Docker Image and Push to AWS ECR

on:
  push:
    branches:
      - main
    paths:
      - input.txt

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ECR_REGISTRY: 250245842722.dkr.ecr.us-east-1.amazonaws.com/airflow-dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Read Input file
      run: |
        echo "previous_version=$(cat input.txt | awk 'NR==1')" >> $GITHUB_ENV
        echo "previous_install=$(cat input.txt | awk 'NR==2')" >> $GITHUB_ENV
        echo "upgrade_version=$(cat input.txt | awk 'NR==3')" >> $GITHUB_ENV
        echo "upgrade_install=$(cat input.txt | awk 'NR==4')" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: airflow-dev
      run: |
        # Pull the existing image to be updated
        docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest

        # Tag it with the new version
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{env.previous_version}}

        # Build new Docker image
        docker build \
          --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
          --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
          -t ${{env.upgrade_version}} .

        docker image ls

        # Tag and push the new image to ECR
        docker tag ${{env.upgrade_version}}:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{env.previous_version}}

        # Optional: Delete old images by version (not latest)
        aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids imageTag=${{env.previous_version}}
