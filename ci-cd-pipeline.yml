name: Deploy Apache Airflow

on:
  push:
    branches:
      - test  # Trigger on push to the 'test' branch

jobs:
  setup:
    runs-on: ubuntu-latest  # The type of VM the job will run on (Ubuntu in this case)

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m venv airflow_venv  # Create a virtual environment
          source airflow_venv/bin/activate  # Activate the virtual environment
          pip install --upgrade pip  # Upgrade pip to the latest version
          pip install -r requirements.txt  # Install dependencies

      # Step 4: Set up Airflow Database
      - name: Set up Airflow Database
        run: |
          source airflow_venv/bin/activate
          export AIRFLOW_HOME=/home/ubuntu/airflow  # Set Airflow home directory
          airflow db init  # Initialize the Airflow database

      # Step 5: Create Airflow Admin User (optional but recommended)
      - name: Create Airflow Admin User
        run: |
          source airflow_venv/bin/activate
          airflow users create \
            --username admin \
            --firstname John \
            --lastname Doe \
            --email john.doe@example.com \
            --role Admin \
            --password admin123

      # Step 6: Start Airflow Webserver
      - name: Start Airflow Webserver
        run: |
          source airflow_venv/bin/activate
          nohup airflow webserver -p 8080 &  # Start the webserver in the background

      # Step 7: Start Airflow Scheduler
      - name: Start Airflow Scheduler
        run: |
          source airflow_venv/bin/activate
          nohup airflow scheduler &  # Start the scheduler in the background
          
      # Optional: Ensure that Nginx is configured properly to forward requests to the Airflow webserver
      # (You'll need to configure Nginx on your server separately, this step ensures the reverse proxy setup works)

      # Add any other necessary steps based on your infrastructure or configurations.
